{"ast":null,"code":"var _jsxFileName = \"/media/joy/Volumn_D/github/React/react_router/react_router-2/frontend/src/pages/EventDetail.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport EventItem from '../components/EventItem';\nimport { Await, defer, json, redirect, useRouteLoaderData } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventDetailPage = () => {\n  _s();\n  const {\n    event,\n    events\n  } = useRouteLoaderData('event-detail');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Await, {\n      resolve: event,\n      children: loadedEvent => /*#__PURE__*/_jsxDEV(EventItem, {\n        event: loadedEvent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Await, {\n      resolve: events,\n      children: loadEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n        events: loadEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(EventDetailPage, \"RYHFM3+vnAtCT3vK8ii1+i0+Nsk=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nasync function loadedEvent(id) {\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch details for selected event.'\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    // return {isError: true, message: 'Could not Fetch events.'};\n    // throw new Response(JSON.stringify({message: 'Could not fetch events.'}),{\n    //   status: 500,\n    // });\n\n    throw json({\n      message: 'Could not fetch events.'\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nexport async function loader(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const id = params.eventId;\n  return defer({\n    event: loadEvent(id),\n    events: loadEvents()\n  });\n}\nexport async function action(_ref2) {\n  let {\n    params,\n    request\n  } = _ref2;\n  const eventId = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + eventId, {\n    method: request.method\n  });\n  if (!response.ok) {\n    throw json({\n      message: 'Could not delete event.'\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/events');\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["React","EventItem","Await","defer","json","redirect","useRouteLoaderData","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","event","events","children","resolve","loadedEvent","fileName","_jsxFileName","lineNumber","columnNumber","loadEvents","_c","id","response","fetch","ok","message","status","resData","loader","_ref","request","params","eventId","loadEvent","action","_ref2","method","$RefreshReg$"],"sources":["/media/joy/Volumn_D/github/React/react_router/react_router-2/frontend/src/pages/EventDetail.js"],"sourcesContent":["import React from 'react';\nimport EventItem from '../components/EventItem';\nimport { Await, defer, json, redirect, useRouteLoaderData } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\n\nconst EventDetailPage = () => {\n  const { event, events } = useRouteLoaderData('event-detail');\n\n  return (\n    <>\n      <Await resolve={event}>\n        {loadedEvent => <EventItem event={loadedEvent} />}\n      </Await>\n      <Await resolve={events}>\n        {loadEvents=> \n        <EventsList events={loadEvents} />}\n      </Await>\n    </>\n\n  )\n}\n\nexport default EventDetailPage;\nasync function loadedEvent(id) {\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    throw json({ message: 'Could not fetch details for selected event.' }, {\n      status: 500\n    })\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\n\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    // return {isError: true, message: 'Could not Fetch events.'};\n    // throw new Response(JSON.stringify({message: 'Could not fetch events.'}),{\n    //   status: 500,\n    // });\n\n    throw json({ message: 'Could not fetch events.' }, {\n      status: 500,\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\n\n\nexport async function loader({ request, params }) {\n  const id = params.eventId;\n  return defer({\n    event: loadEvent(id),\n    events: loadEvents()\n  })\n}\n\nexport async function action({ params, request }) {\n  const eventId = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + eventId, {\n    method: request.method,\n  });\n  if (!response.ok) {\n    throw json({ message: 'Could not delete event.' }, {\n      status: 500\n    });\n  }\n  return redirect('/events');\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}