{"ast":null,"code":"var _jsxFileName = \"/media/joy/Volumn_D/github/React/react_router/react_router-2/frontend/src/pages/NewEvent.js\";\nimport React from 'react';\nimport EventForm from '../components/EventForm';\nimport { json, redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewEventPage = () => {\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 10\n  }, this);\n};\n_c = NewEventPage;\nexport default NewEventPage;\nexport async function action(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const data = await request.formData();\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  };\n  const response = await fetch('http://localhost:8080/events', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (!response.ok) {\n    throw json({\n      message: 'Could not save event.'\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/events');\n}\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["React","EventForm","json","redirect","jsxDEV","_jsxDEV","NewEventPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","_ref","request","params","data","formData","eventData","title","get","image","date","description","response","fetch","method","headers","body","JSON","stringify","ok","message","status","$RefreshReg$"],"sources":["/media/joy/Volumn_D/github/React/react_router/react_router-2/frontend/src/pages/NewEvent.js"],"sourcesContent":["import React from 'react'\nimport EventForm from '../components/EventForm';\nimport { json, redirect } from 'react-router-dom';\n\nconst NewEventPage = () => {\n  return <EventForm />;\n}\n\nexport default NewEventPage;\n\nexport async function action({request, params}){\n  const data = await request.formData();\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description'),\n  }\n  const response = await fetch('http://localhost:8080/events',{\n    method: 'POST',\n    headers:{\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(eventData)\n  });\n  if(!response.ok){\n    throw json({message: 'Could not save event.'}, {status: 500});\n  }\n  return redirect('/events');\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACzB,oBAAOD,OAAA,CAACJ,SAAS;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AACtB,CAAC;AAAAC,EAAA,GAFKL,YAAY;AAIlB,eAAeA,YAAY;AAE3B,OAAO,eAAeM,MAAMA,CAAAC,IAAA,EAAmB;EAAA,IAAlB;IAACC,OAAO;IAAEC;EAAM,CAAC,GAAAF,IAAA;EAC5C,MAAMG,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,EAAE;EACrC,MAAMC,SAAS,GAAG;IAChBC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,KAAK,EAAEL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBE,IAAI,EAAEN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtBG,WAAW,EAAEP,IAAI,CAACI,GAAG,CAAC,aAAa;EACrC,CAAC;EACD,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAC;IAC1DC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAC;MACN,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,SAAS;EAChC,CAAC,CAAC;EACF,IAAG,CAACM,QAAQ,CAACO,EAAE,EAAC;IACd,MAAM7B,IAAI,CAAC;MAAC8B,OAAO,EAAE;IAAuB,CAAC,EAAE;MAACC,MAAM,EAAE;IAAG,CAAC,CAAC;EAC/D;EACA,OAAO9B,QAAQ,CAAC,SAAS,CAAC;AAC5B;AAAC,IAAAQ,EAAA;AAAAuB,YAAA,CAAAvB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}