{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventsPage = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [fetchedEvents, setFetchedEvents] = useState();\n  const [error, setError] = useState();\n  useEffect(() => {\n    async function fetchEvents() {\n      setIsLoading(true);\n      const response = await fetch('http://localhost:8080/events');\n      if (!response.ok) {\n        setError('Fetched events failed!');\n      } else {\n        const resData = await response.json();\n        setFetchedEvents(resData.events);\n      }\n      setIsLoading(false);\n    }\n    fetchEvents();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(EventsPage, \"qNzRHA+sE7qujjZhWBEU6UvtUuo=\");\n_c = EventsPage;\nexport default EventsPage;\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["React","useEffect","useState","Fragment","_Fragment","jsxDEV","_jsxDEV","EventsPage","_s","isLoading","setIsLoading","fetchedEvents","setFetchedEvents","error","setError","fetchEvents","response","fetch","ok","resData","json","events","_c","$RefreshReg$"],"sources":["/media/joy/Volumn_D/github/React/react_router/react_router-2/frontend/src/pages/Events.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\n\nconst EventsPage = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [fetchedEvents, setFetchedEvents] = useState();\n  const [error, setError] = useState();\n\n  useEffect(() => {\n    async function fetchEvents(){\n      setIsLoading(true);\n      const response =await fetch('http://localhost:8080/events');\n      if(!response.ok){\n        setError('Fetched events failed!');\n      }else{\n        const resData =await response.json();\n        setFetchedEvents(resData.events);\n      }\n      setIsLoading(false);\n    }\n    fetchEvents();\n  }, [])\n  \n  return (\n    <>\n    </>\n  )\n}\n\nexport default EventsPage\n\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,EAAE;EACpD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,EAAE;EAEpCD,SAAS,CAAC,MAAM;IACd,eAAec,WAAWA,CAAA,EAAE;MAC1BL,YAAY,CAAC,IAAI,CAAC;MAClB,MAAMM,QAAQ,GAAE,MAAMC,KAAK,CAAC,8BAA8B,CAAC;MAC3D,IAAG,CAACD,QAAQ,CAACE,EAAE,EAAC;QACdJ,QAAQ,CAAC,wBAAwB,CAAC;MACpC,CAAC,MAAI;QACH,MAAMK,OAAO,GAAE,MAAMH,QAAQ,CAACI,IAAI,EAAE;QACpCR,gBAAgB,CAACO,OAAO,CAACE,MAAM,CAAC;MAClC;MACAX,YAAY,CAAC,KAAK,CAAC;IACrB;IACAK,WAAW,EAAE;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACET,OAAA,CAAAF,SAAA,oBACG;AAEP,CAAC;AAAAI,EAAA,CAxBKD,UAAU;AAAAe,EAAA,GAAVf,UAAU;AA0BhB,eAAeA,UAAU;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}