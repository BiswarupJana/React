{"ast":null,"code":"var _jsxFileName = \"/media/joy/Volumn_D/github/React/react_router/react_router-2/frontend/src/pages/EventDetail.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport EventItem from '../components/EventItem';\nimport { json, useLoaderData } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventDetailPage = () => {\n  _s();\n  const data = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventItem, {\n      event: data.event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(EventDetailPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport async function loader(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const id = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + id);\n  console.log(response);\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch details for selected event.'\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["React","EventItem","json","useLoaderData","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","data","children","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","_ref","request","params","id","eventId","response","fetch","console","log","ok","message","status","$RefreshReg$"],"sources":["/media/joy/Volumn_D/github/React/react_router/react_router-2/frontend/src/pages/EventDetail.js"],"sourcesContent":["import React from 'react';\nimport EventItem from '../components/EventItem';\nimport { json,useLoaderData } from 'react-router-dom';\n\nconst EventDetailPage = () => {\n  const data = useLoaderData();\n  \n  return (\n    <>\n    <EventItem event={data.event}/>\n    </>\n    \n  )\n}\n\nexport default EventDetailPage;\n\nexport async function loader({request, params}){\n  const id = params.eventId;\n  const response = await fetch('http://localhost:8080/events/'+id);\n  console.log(response);\n  if(!response.ok){\n    throw json({message: 'Could not fetch details for selected event.'},{\n      status: 500\n    })\n  } else {\n    return response;\n  }\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,IAAI,EAACC,aAAa,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEtD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,IAAI,GAAGP,aAAa,EAAE;EAE5B,oBACEE,OAAA,CAAAE,SAAA;IAAAI,QAAA,eACAN,OAAA,CAACJ,SAAS;MAACW,KAAK,EAAEF,IAAI,CAACE;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAE,iBAC5B;AAGP,CAAC;AAAAP,EAAA,CATKD,eAAe;EAAA,QACNL,aAAa;AAAA;AAAAc,EAAA,GADtBT,eAAe;AAWrB,eAAeA,eAAe;AAE9B,OAAO,eAAeU,MAAMA,CAAAC,IAAA,EAAmB;EAAA,IAAlB;IAACC,OAAO;IAAEC;EAAM,CAAC,GAAAF,IAAA;EAC5C,MAAMG,EAAE,GAAGD,MAAM,CAACE,OAAO;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAACH,EAAE,CAAC;EAChEI,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;EACrB,IAAG,CAACA,QAAQ,CAACI,EAAE,EAAC;IACd,MAAM1B,IAAI,CAAC;MAAC2B,OAAO,EAAE;IAA6C,CAAC,EAAC;MAClEC,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC,MAAM;IACL,OAAON,QAAQ;EACjB;AACF;AAAC,IAAAP,EAAA;AAAAc,YAAA,CAAAd,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}